<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zl.mall.base.userrole.mapper.UserRoleMapper">
	<resultMap id="userRole" type="com.zl.mall.base.userrole.entity.UserRoleEntity">
		<id column="user_role_id" jdbcType="VARCHAR" property="userRoleId" />
		<result column="user_id" jdbcType="VARCHAR" property="userId" />
		<result column="role_id" jdbcType="VARCHAR" property="roleId" />
	</resultMap>

	<select id="queryList" parameterType="java.util.Map" resultMap="userRole">
		select * from user_role
		<where>
			<if test="userRoleId != null and userRoleId != ''">
				 and user_role_id=#{userRoleId, jdbcType=VARCHAR}
			</if>
			<if test="userId != null and userId != ''">
				 and user_id=#{userId, jdbcType=VARCHAR}
			</if>
			<if test="roleId != null and roleId != ''">
				 and role_id=#{roleId, jdbcType=VARCHAR}
			</if>
		</where>
	</select>

	<insert id="add" parameterType="com.zl.mall.base.userrole.entity.UserRoleEntity">
		insert into user_role (
		<trim suffixOverrides=",">
			user_role_id,
			<if test="userId != null and userId != ''">
				user_id,
			</if>
			<if test="roleId != null and roleId != ''">
				role_id,
			</if>
		</trim>
		) values (
		<trim suffixOverrides=",">
			<if test="userRoleId != null and userRoleId != ''">
				#{userRoleId, jdbcType=VARCHAR},
			</if>
			<if test="userId != null and userId != ''">
				#{userId, jdbcType=VARCHAR},
			</if>
			<if test="roleId != null and roleId != ''">
				#{roleId, jdbcType=VARCHAR},
			</if>
		</trim>
)
	</insert>
	<update id="update" parameterType="com.zl.mall.base.userrole.entity.UserRoleEntity">
		update user_role set 
		<trim suffixOverrides=",">
			<if test="userId != null and userId != ''">
				user_id=#{userId, jdbcType=VARCHAR},
			</if>
			<if test="roleId != null and roleId != ''">
				role_id=#{roleId, jdbcType=VARCHAR},
			</if>
		</trim>
		<where>
			 and user_role_id=#{userRoleId, jdbcType=VARCHAR}
		</where>
	</update>

	<delete id="delete" parameterType="java.lang.String">
		delete from user_role 
			<where>
			 and user_role_id=#{userRoleId, jdbcType=VARCHAR}
		</where>
	</delete>
	
	<delete id="deleteByUserId" parameterType="java.lang.String">
		delete from user_role 
			<where>
			 and user_id=#{userId, jdbcType=VARCHAR}
		</where>
	</delete>
</mapper>